version: '3.8'

services:
  pipeline-detector:
    build: .
    container_name: pipeline-detector
    ports:
      - "5000:5000"
    volumes:
      - ./TestData:/app/TestData:ro
      - ./logs:/app/logs
      - pipeline-data:/app/data
    environment:
      - FLASK_ENV=production
      - LOG_LEVEL=INFO
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: pipeline-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - pipeline-detector
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: pipeline-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  pipeline-data:
  redis-data:
